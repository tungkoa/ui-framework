{"code":"import { MINI } from './constants.js';\nconst MODE_SLASH = 0;\nconst MODE_TEXT = 1;\nconst MODE_WHITESPACE = 2;\nconst MODE_TAGNAME = 3;\nconst MODE_COMMENT = 4;\nconst MODE_PROP_SET = 5;\nconst MODE_PROP_APPEND = 6;\nconst CHILD_APPEND = 0;\nconst CHILD_RECURSE = 2;\nconst TAG_SET = 3;\nconst PROPS_ASSIGN = 4;\nconst PROP_SET = MODE_PROP_SET;\nconst PROP_APPEND = MODE_PROP_APPEND;\n// Turn a result of a build(...) call into a tree that is more\n// convenient to analyze and transform (e.g. Babel plugins).\n// For example:\n// \ttreeify(\n//\t\tbuild'<div href=\"1${a}\" ...${b}><${x} /></div>`,\n//\t\t[X, Y, Z]\n//\t)\n// returns:\n// \t{\n// \t\ttag: 'div',\n//\t\tprops: [ { href: [\"1\", X] },\tY ],\n// \t\tchildren: [ { tag: Z, props: [], children: [] } ]\n// \t}\nexport const treeify = (built, fields) => {\n    const _treeify = (built) => {\n        let tag = '';\n        let currentProps = null;\n        const props = [];\n        const children = [];\n        for (let i = 1; i < built.length; i++) {\n            const type = built[i++];\n            const value = built[i] ? fields[built[i++] - 1] : built[++i];\n            if (type === TAG_SET) {\n                tag = value;\n            }\n            else if (type === PROPS_ASSIGN) {\n                props.push(value);\n                currentProps = null;\n            }\n            else if (type === PROP_SET) {\n                if (!currentProps) {\n                    currentProps = Object.create(null);\n                    props.push(currentProps);\n                }\n                currentProps[built[++i]] = [value];\n            }\n            else if (type === PROP_APPEND) {\n                currentProps[built[++i]].push(value);\n            }\n            else if (type === CHILD_RECURSE) {\n                children.push(_treeify(value));\n            }\n            else if (type === CHILD_APPEND) {\n                children.push(value);\n            }\n        }\n        return { tag, props, children };\n    };\n    const { children } = _treeify(built);\n    return children.length > 1 ? children : children[0];\n};\nexport const evaluate = (h, built, fields, args) => {\n    let tmp;\n    // `build()` used the first element of the operation list as\n    // temporary workspace. Now that `build()` is done we can use\n    // that space to track whether the current element is \"dynamic\"\n    // (i.e. it or any of its descendants depend on dynamic values).\n    built[0] = 0;\n    for (let i = 1; i < built.length; i++) {\n        const type = built[i++];\n        // Set `built[0]`'s appropriate bits if this element depends on a dynamic value.\n        const value = built[i] ? ((built[0] |= type ? 1 : 2), fields[built[i++]]) : built[++i];\n        if (type === TAG_SET) {\n            args[0] = value;\n        }\n        else if (type === PROPS_ASSIGN) {\n            args[1] = Object.assign(args[1] || {}, value);\n        }\n        else if (type === PROP_SET) {\n            ;\n            (args[1] = args[1] || {})[built[++i]] = value;\n        }\n        else if (type === PROP_APPEND) {\n            args[1][built[++i]] += `${value}`;\n        }\n        else if (type) {\n            // type === CHILD_RECURSE\n            // Set the operation list (including the staticness bits) as\n            // `this` for the `h` call.\n            tmp = h.apply(value, evaluate(h, value, fields, ['', null]));\n            args.push(tmp);\n            if (value[0]) {\n                // Set the 2nd lowest bit it the child element is dynamic.\n                built[0] |= 2;\n            }\n            else {\n                // Rewrite the operation list in-place if the child element is static.\n                // The currently evaluated piece `CHILD_RECURSE, 0, [...]` becomes\n                // `CHILD_APPEND, 0, tmp`.\n                // Essentially the operation list gets optimized for potential future\n                // re-evaluations.\n                built[i - 2] = CHILD_APPEND;\n                built[i] = tmp;\n            }\n        }\n        else {\n            // type === CHILD_APPEND\n            args.push(value);\n        }\n    }\n    return args;\n};\nexport const build = function (statics, ...rest) {\n    const fields = [statics, ...rest];\n    // @ts-ignore\n    const h = this;\n    let mode = MODE_TEXT;\n    let buffer = '';\n    let quote = '';\n    let current = [0];\n    let char;\n    let propName;\n    const commit = (field) => {\n        if (mode === MODE_TEXT && (field || (buffer = buffer.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g, '')))) {\n            if (MINI) {\n                current.push(field ? fields[field] : buffer);\n            }\n            else {\n                current.push(CHILD_APPEND, field, buffer);\n            }\n        }\n        else if (mode === MODE_TAGNAME && (field || buffer)) {\n            if (MINI) {\n                current[1] = field ? fields[field] : buffer;\n            }\n            else {\n                current.push(TAG_SET, field, buffer);\n            }\n            mode = MODE_WHITESPACE;\n        }\n        else if (mode === MODE_WHITESPACE && buffer === '...' && field) {\n            if (MINI) {\n                current[2] = Object.assign(current[2] || {}, fields[field]);\n            }\n            else {\n                current.push(PROPS_ASSIGN, field, 0);\n            }\n        }\n        else if (mode === MODE_WHITESPACE && buffer && !field) {\n            if (MINI) {\n                ;\n                (current[2] = current[2] || {})[buffer] = true;\n            }\n            else {\n                current.push(PROP_SET, 0, true, buffer);\n            }\n        }\n        else if (mode >= MODE_PROP_SET) {\n            if (MINI) {\n                if (mode === MODE_PROP_SET) {\n                    ;\n                    (current[2] = current[2] || {})[propName] = field\n                        ? buffer\n                            ? buffer + fields[field]\n                            : fields[field]\n                        : buffer;\n                    mode = MODE_PROP_APPEND;\n                }\n                else if (field || buffer) {\n                    current[2][propName] += field ? buffer + fields[field] : buffer;\n                }\n            }\n            else {\n                if (buffer || (!field && mode === MODE_PROP_SET)) {\n                    current.push(mode, 0, buffer, propName);\n                    mode = MODE_PROP_APPEND;\n                }\n                if (field) {\n                    current.push(mode, field, 0, propName);\n                    mode = MODE_PROP_APPEND;\n                }\n            }\n        }\n        buffer = '';\n    };\n    for (let i = 0; i < statics.length; i++) {\n        if (i) {\n            if (mode === MODE_TEXT) {\n                commit();\n            }\n            commit(i);\n        }\n        for (let j = 0; j < statics[i].length; j++) {\n            char = statics[i][j];\n            if (mode === MODE_TEXT) {\n                if (char === '<') {\n                    // commit buffer\n                    commit();\n                    if (MINI) {\n                        current = [current, '', null];\n                    }\n                    else {\n                        current = [current];\n                    }\n                    mode = MODE_TAGNAME;\n                }\n                else {\n                    buffer += char;\n                }\n            }\n            else if (mode === MODE_COMMENT) {\n                // Ignore everything until the last three characters are '-', '-' and '>'\n                if (buffer === '--' && char === '>') {\n                    mode = MODE_TEXT;\n                    buffer = '';\n                }\n                else {\n                    buffer = char + buffer[0];\n                }\n            }\n            else if (quote) {\n                if (char === quote) {\n                    quote = '';\n                }\n                else {\n                    buffer += char;\n                }\n            }\n            else if (char === '\"' || char === \"'\") {\n                quote = char;\n            }\n            else if (char === '>') {\n                commit();\n                mode = MODE_TEXT;\n            }\n            else if (!mode) {\n                // Ignore everything until the tag ends\n            }\n            else if (char === '=') {\n                mode = MODE_PROP_SET;\n                propName = buffer;\n                buffer = '';\n            }\n            else if (char === '/' && (mode < MODE_PROP_SET || statics[i][j + 1] === '>')) {\n                commit();\n                if (mode === MODE_TAGNAME) {\n                    current = current[0];\n                }\n                mode = current;\n                if (MINI) {\n                    ;\n                    (current = current[0]).push(h(...mode.slice(1)));\n                }\n                else {\n                    ;\n                    (current = current[0]).push(CHILD_RECURSE, 0, mode);\n                }\n                mode = MODE_SLASH;\n            }\n            else if (char === ' ' || char === '\\t' || char === '\\n' || char === '\\r') {\n                // <a disabled>\n                commit();\n                mode = MODE_WHITESPACE;\n            }\n            else {\n                buffer += char;\n            }\n            if (mode === MODE_TAGNAME && buffer === '!--') {\n                mode = MODE_COMMENT;\n                current = current[0];\n            }\n        }\n    }\n    commit();\n    if (MINI) {\n        return current.length > 2 ? current.slice(1) : current[1];\n    }\n    return current;\n};\n//# sourceMappingURL=build.js.map","references":["/Users/tungkoa/WebstormProjects/new-ui-framework/nano/src/htm/constants.ts"],"map":"{\"version\":3,\"file\":\"build.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/htm/build.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"./node_modules/.cache/.rts2_cache_cjs/placeholder/htm/build.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"build.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/htm/build.ts\"],\"names\":[],\"mappings\":\"AA8BA,eAAO,MAAM,OAAO,UAAW,GAAG,UAAU,GAAG,QAmC9C,CAAA;AAED,eAAO,MAAM,QAAQ,MAAO,GAAG,SAAS,GAAG,UAAU,GAAG,QAAQ,GAAG,KAAG,GAiDrE,CAAA;AAED,eAAO,MAAM,KAAK,YAAsB,oBAAoB,WAAW,GAAG,EAAE,QAkJ3E,CAAA\"}"},"dts":{"name":"./node_modules/.cache/.rts2_cache_cjs/placeholder/htm/build.d.ts","writeByteOrderMark":false,"text":"export declare const treeify: (built: any, fields: any) => any;\nexport declare const evaluate: (h: any, built: any, fields: any, args: any) => any;\nexport declare const build: (statics: TemplateStringsArray, ...rest: any[]) => any;\n//# sourceMappingURL=build.d.ts.map"}}
