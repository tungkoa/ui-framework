export { h, render, hydrate, tick } from "./core.js";
export type { FC } from "./core.js";
export { Component } from "./component.js";
export * from "./components/index.js";
import { isSSR } from "./core.js";
declare const _default: {
    h: (tagNameOrComponent: any, props?: any, ...children: any[]) => any;
    render: (component: any, parent?: HTMLElement | null, removeChildNodes?: boolean) => any;
    hydrate: (component: any, parent?: HTMLElement | null, removeChildNodes?: boolean) => any;
    renderSSR: (component: any, options?: {
        pathname?: string | undefined;
        clearState?: boolean | undefined;
    }) => string;
    isSSR: () => boolean;
};
export default _default;
export { isSSR };
export { jsx } from "./jsx.js";
export { hydrateLazy } from "./lazy.js";
export { nodeToString, task } from "./helpers.js";
export { renderSSR } from "./ssr.js";
export { Fragment } from "./fragment.js";
export { Store } from "./store.js";
export { createContext, useContext } from "./context.js";
export { withStyles } from "./withStyles.js";
export { defineAsCustomElements } from "./customElementsMode.js";
export { printVersion } from "./helpers.js";
export { VERSION } from "./version.js";
//# sourceMappingURL=index.d.ts.map