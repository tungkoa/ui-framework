{"code":"import { Component } from '../component.js';\nimport { h, strToHash } from '../core.js';\n/**\n * A useful Image component\n * Add <Img lazy ..., to lazy load the img source\n * Add <Img width=\"100\" height=\"100\" ..., to specify img element's size.\n * Add <Img placeholder=\"src or element\" ...., to prepare placeholder for img.\n */\nexport class Img extends Component {\n    constructor(props) {\n        super(props);\n        const { src, key } = props;\n        // id has to be unique\n        this.id = `${strToHash(src)}-${strToHash(JSON.stringify(props))}`;\n        if (key)\n            this.id += `key-${key}`;\n        // this could also be done in willMount()\n        if (!this.state)\n            this.setState({ isLoaded: false, image: undefined });\n    }\n    didMount() {\n        const { lazy = true, placeholder, children, key, ref, ...rest } = this.props;\n        if (typeof lazy === 'boolean' && lazy === false)\n            return;\n        const observer = new IntersectionObserver((entries, observer) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    observer.disconnect();\n                    this.state.image = h('img', { ...rest });\n                    if (this.state.image.complete) {\n                        this.state.isLoaded = true;\n                        this.update();\n                    }\n                    else {\n                        this.state.image.onload = () => {\n                            this.state.isLoaded = true;\n                            this.update();\n                        };\n                    }\n                }\n            });\n        }, { threshold: [0, 1] });\n        observer.observe(this.elements[0]);\n    }\n    render() {\n        const { src, placeholder, children, lazy = true, key, ref, ...rest } = this.props;\n        // return the img tag if not lazy loaded\n        if (typeof lazy === 'boolean' && lazy === false) {\n            this.state.image = h('img', { src, ...rest });\n            return this.state.image;\n        }\n        // if it is visible and loaded, show the image\n        if (this.state.isLoaded) {\n            return this.state.image;\n            // if the placeholder is an image src\n        }\n        else if (placeholder && typeof placeholder === 'string') {\n            return h('img', { src: placeholder, ...rest });\n            // if the placeholder is an JSX element\n        }\n        else if (placeholder && typeof placeholder === 'function') {\n            return placeholder();\n        }\n        else {\n            // render a simple box\n            const style = {};\n            if (rest.width)\n                style.width = `${rest.width}px`;\n            if (rest.height)\n                style.height = `${rest.height}px`;\n            const { width, height, ...others } = rest;\n            return h('div', { style, ...others });\n        }\n    }\n}\n//# sourceMappingURL=img.js.map","references":["/Users/tungkoa/WebstormProjects/new-ui-framework/nano/src/component.ts","/Users/tungkoa/WebstormProjects/new-ui-framework/nano/src/core.ts"],"map":"{\"version\":3,\"file\":\"img.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/img.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"./node_modules/.cache/.rts2_cache_umd/placeholder/components/img.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"img.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/img.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAA;AAG3C,UAAU,KAAK;IACb,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,CAAA;IAClB,GAAG,EAAE,MAAM,CAAA;IACX,MAAM,CAAC,EAAE,MAAM,GAAG,MAAM,CAAA;IACxB,KAAK,CAAC,EAAE,MAAM,GAAG,MAAM,CAAA;IACvB,IAAI,CAAC,EAAE,OAAO,CAAA;IACd,WAAW,CAAC,EAAE,GAAG,CAAA;CAClB;AAED;;;;;GAKG;AACH,qBAAa,GAAI,SAAQ,SAAS,CAAC,KAAK,CAAC;gBAC3B,KAAK,EAAE,KAAK;IAaxB,QAAQ;IA2BR,MAAM;CA2BP\"}"},"dts":{"name":"./node_modules/.cache/.rts2_cache_umd/placeholder/components/img.d.ts","writeByteOrderMark":false,"text":"import { Component } from '../component.js';\ninterface Props {\n    [key: string]: any;\n    src: string;\n    height?: number | string;\n    width?: number | string;\n    lazy?: boolean;\n    placeholder?: any;\n}\n/**\n * A useful Image component\n * Add <Img lazy ..., to lazy load the img source\n * Add <Img width=\"100\" height=\"100\" ..., to specify img element's size.\n * Add <Img placeholder=\"src or element\" ...., to prepare placeholder for img.\n */\nexport declare class Img extends Component<Props> {\n    constructor(props: Props);\n    didMount(): void;\n    render(): any;\n}\nexport {};\n//# sourceMappingURL=img.d.ts.map"}}
