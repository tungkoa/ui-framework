"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.output = void 0;
var fs_1 = __importDefault(require("fs"));
var path_1 = __importDefault(require("path"));
var error_1 = require("./error");
var output = function (KEYS, FILENAME, json, isESM, testing) {
    if (testing === void 0) { testing = true; }
    var dirname = path_1.default.dirname(FILENAME);
    var packagePath = path_1.default.resolve("./" + FILENAME);
    var output = testing ? "" : "// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n";
    var prepareOutput = function (key) {
        var value = json[key];
        var keys = key.split('.');
        if (keys.length >= 2) {
            key = keys[keys.length - 1];
            value = json[keys.shift()];
            keys.forEach(function (key) {
                value = value["" + key];
            });
        }
        // (\w = [a-zA-Z0-9_])
        key = key.toUpperCase(); // to uppercase
        key = key.replace(/[-\s\\\/@]/gm, '_'); // replace - space \ / and @ with _
        key = key.replace(/[^\w]/gm, ''); // remove all special characters
        value = JSON.stringify(value, null, 2);
        var esm = "export const " + key + " = " + value + ";";
        var cjs = "exports." + key + " = " + value + ";";
        return isESM ? esm : cjs;
    };
    KEYS.forEach(function (key) {
        output += prepareOutput(key) + "\n";
    });
    if (testing) {
        return { path: packagePath, output: output };
    }
    fs_1.default.mkdir(path_1.default.resolve(dirname), { recursive: true }, function (err) {
        if (err)
            error_1.error();
        fs_1.default.writeFile(packagePath, output, function (err) {
            if (err)
                error_1.error();
            process.exit(0);
        });
    });
};
exports.output = output;
