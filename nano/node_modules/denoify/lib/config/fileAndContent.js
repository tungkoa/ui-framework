"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _1 = require(".");
function tryParseAsJson(content) {
    try {
        return JSON.parse(content);
    }
    catch {
        return undefined;
    }
}
function parseConfig({ configFileBasename, configFileRawContent }) {
    if (configFileBasename === undefined ||
        configFileRawContent === undefined ||
        !_1.default.supportedConfigFile.find(configFile => configFileBasename.endsWith(configFile))) {
        return {
            type: "absent"
        };
    }
    if (configFileBasename.endsWith(".json") && tryParseAsJson(configFileRawContent)) {
        return {
            type: "json",
            configFileBasename,
            configFileRawContent
        };
    }
    if (configFileBasename.endsWith(".js")) {
        return {
            type: "js",
            configFileBasename,
            configFileRawContent
        };
    }
    return {
        type: "absent"
    };
}
function getFileTypeAndContent({ getConfigFileRawContent }) {
    return _1.default.supportedConfigFile.reduce(async (configFileType, configFileBasename) => {
        if ((await configFileType).type !== "absent") {
            return configFileType;
        }
        const configFileRawContent = await getConfigFileRawContent(configFileBasename);
        if (!configFileRawContent || (configFileBasename === _1.default.packageJson && !tryParseAsJson(configFileRawContent)?.denoify)) {
            return configFileType;
        }
        return parseConfig({
            configFileBasename,
            configFileRawContent
        });
    }, Promise.resolve({ type: "absent" }));
}
exports.default = getFileTypeAndContent;
//# sourceMappingURL=fileAndContent.js.map