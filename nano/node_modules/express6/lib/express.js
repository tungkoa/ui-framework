"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * Copyright(c) 2021 Yannick Deubel (https://github.com/yandeu)
 * MIT Licensed
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Static = exports.Router = exports.Route = exports.response = exports.request = exports.application = exports.express = void 0;
/** Module dependencies. */
const application_js_1 = require("./application.js");
const route_js_1 = require("./router/route.js");
Object.defineProperty(exports, "Route", { enumerable: true, get: function () { return route_js_1.Route; } });
const index_js_1 = require("./router/index.js");
Object.defineProperty(exports, "Router", { enumerable: true, get: function () { return index_js_1.Router; } });
const serve_static_1 = __importDefault(require("serve-static"));
exports.Static = serve_static_1.default;
const request_js_1 = require("./request.js");
const response_js_1 = require("./response.js");
/** Create an express application. */
const createApplication = () => {
    const app = new application_js_1.Express();
    // expose the prototype that will get set on requests
    app.request = Object.create(request_js_1.req, {
        app: { configurable: true, enumerable: true, writable: true, value: app }
    });
    // expose the prototype that will get set on responses
    app.response = Object.create(response_js_1.res, {
        app: { configurable: true, enumerable: true, writable: true, value: app }
    });
    // @ts-ignore
    app.init();
    return app;
};
exports.express = createApplication;
exports.default = createApplication;
/** Expose the prototypes. */
var application_js_2 = require("./application.js");
Object.defineProperty(exports, "application", { enumerable: true, get: function () { return application_js_2.Express; } });
var request_js_2 = require("./request.js");
Object.defineProperty(exports, "request", { enumerable: true, get: function () { return request_js_2.req; } });
var response_js_2 = require("./response.js");
Object.defineProperty(exports, "response", { enumerable: true, get: function () { return response_js_2.res; } });
/** Export Types */
__exportStar(require("./types.js"), exports);
/**
 * Replace removed middleware with an appropriate error message.
 */
// let removedMiddlewares = [
//   'bodyParser',
//   'compress',
//   'cookieSession',
//   'session',
//   'logger',
//   'cookieParser',
//   'favicon',
//   'responseTime',
//   'errorHandler',
//   'timeout',
//   'methodOverride',
//   'vhost',
//   'csrf',
//   'directory',
//   'limit',
//   'multipart',
//   'staticCache',
//   'query'
// ]
// removedMiddlewares.forEach(function (name) {
//   Object.defineProperty(exports, name, {
//     get: function () {
//       throw new Error(
//         'Most middleware (like ' +
//           name +
//           ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.'
//       )
//     },
//     configurable: true
//   })
// })
//# sourceMappingURL=express.js.map