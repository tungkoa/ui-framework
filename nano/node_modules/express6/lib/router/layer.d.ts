/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * Copyright(c) 2021 Yannick Deubel (https://github.com/yandeu)
 * MIT Licensed
 */
import type { NextFunction, Request, Response } from '../types';
import type { Route } from '../types';
interface ExtendedRegExp extends RegExp {
    fast_slash: boolean;
    fast_star: boolean;
}
interface Handler {
    (req: Request, res: Response, next: NextFunction): Promise<any>;
    (err: Error, req: Request, res: Response, next: NextFunction): Promise<any>;
}
export declare class Layer {
    handle: Handler;
    keys: any[];
    method: string | undefined;
    name: string;
    params: any;
    path: string | undefined;
    regexp: ExtendedRegExp;
    route: Route | undefined;
    constructor(path: string, options: Object, fn: Handler);
    /** Handle the error for the layer. */
    handle_error(error: any, req: Request, res: Response, next: NextFunction): void;
    /** Handle the request for the layer. */
    handle_request(req: Request, res: Response, next: NextFunction): void;
    /**
     * Check if this route matches `path`, if so
     * populate `.params`.
     */
    match(path: string): boolean;
}
export {};
