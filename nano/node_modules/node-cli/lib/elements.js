"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Background = exports.Gray = exports.Red = exports.Yellow = exports.Green = exports.Blue = exports.Color = exports.Bold = exports.Modifier = exports.Text = exports.Box = exports.code = void 0;
const core_1 = require("./jsx/core");
const code_1 = require("./utils/code");
Object.defineProperty(exports, "code", { enumerable: true, get: function () { return code_1.code; } });
const stringLength_1 = require("./utils/stringLength");
const Box = props => {
    const isBig = props.big || false;
    const text = props.children;
    let length = stringLength_1.stringLength(text) + 2;
    if (isBig)
        length += 4;
    const lines = new Array(length).fill('─').join('');
    const spaces = new Array(length).fill(' ').join('');
    if (isBig) {
        return (core_1.h("div", null,
            `┌${lines}┐`,
            core_1.h("br", null),
            `│${spaces}│`,
            core_1.h("br", null),
            `│   ${text}   │`,
            core_1.h("br", null),
            `│${spaces}│`,
            core_1.h("br", null),
            `└${lines}┘`,
            core_1.h("br", null)));
    }
    return (core_1.h("div", null,
        `┌${lines}┐`,
        core_1.h("br", null),
        `│ ${text} │`,
        core_1.h("br", null),
        `└${lines}┘`,
        core_1.h("br", null)));
};
exports.Box = Box;
const Text = props => {
    let el = props.children;
    if (props.color)
        el = core_1.h(exports.Color, { color: props.color }, el);
    if (props.background)
        el = core_1.h(exports.Background, { color: props.background }, el);
    Object.keys(props).forEach(p => {
        if (!['color', 'background', 'children'].includes(p)) {
            el = core_1.h(exports.Modifier, { modifier: p }, el);
        }
    });
    return el;
};
exports.Text = Text;
// modifiers
const Modifier = props => {
    return code_1.code('modifier', props.modifier, props.children);
};
exports.Modifier = Modifier;
const Bold = (props) => {
    return code_1.code('modifier', 'bold', props.children);
};
exports.Bold = Bold;
// colors
const Color = props => {
    return code_1.code('color', props.color, props.children);
};
exports.Color = Color;
const Blue = (props) => {
    return code_1.code('color', 'blue', props.children);
};
exports.Blue = Blue;
const Green = (props) => {
    return code_1.code('color', 'green', props.children);
};
exports.Green = Green;
const Yellow = (props) => {
    return code_1.code('color', 'yellow', props.children);
};
exports.Yellow = Yellow;
const Red = (props) => {
    return code_1.code('color', 'red', props.children);
};
exports.Red = Red;
const Gray = (props) => {
    return code_1.code('color', 'gray', props.children);
};
exports.Gray = Gray;
// background
const Background = props => {
    return code_1.code('background', props.color, props.children);
};
exports.Background = Background;
