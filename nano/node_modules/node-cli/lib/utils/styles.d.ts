/**
 * The MIT License (MIT)
Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)
 */
export declare type Styles = Modifier | Background | Color;
export declare type StylesType = keyof typeof styles;
export declare type Modifier = keyof typeof styles.modifier;
export declare type Background = keyof typeof styles.background;
export declare type Color = keyof typeof styles.color;
export declare type ModifierKeys = {
    [key in Modifier]: boolean;
};
export interface TextProps extends Partial<ModifierKeys> {
    color?: Color;
    background?: Background;
    children?: any;
}
export declare const styles: {
    modifier: {
        reset: number[];
        bold: number[];
        dim: number[];
        italic: number[];
        underline: number[];
        inverse: number[];
        hidden: number[];
        strikethrough: number[];
        overline: number[];
    };
    color: {
        black: number[];
        red: number[];
        green: number[];
        yellow: number[];
        blue: number[];
        magenta: number[];
        cyan: number[];
        white: number[];
        gray: number[];
        grey: number[];
        brightRed: number[];
        brightGreen: number[];
        brightYellow: number[];
        brightBlue: number[];
        brightMagenta: number[];
        brightCyan: number[];
        brightWhite: number[];
    };
    background: {
        black: number[];
        red: number[];
        green: number[];
        yellow: number[];
        blue: number[];
        magenta: number[];
        cyan: number[];
        white: number[];
        gray: number[];
        grey: number[];
        brightRed: number[];
        brightGreen: number[];
        brightYellow: number[];
        brightBlue: number[];
        brightMagenta: number[];
        brightCyan: number[];
        brightWhite: number[];
    };
};
