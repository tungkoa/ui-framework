"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeHtml = exports.statusCode = exports.escapeHtml = exports.mime = exports.fontFamily = exports.isFile = exports.isPromise = void 0;
const path_1 = require("path");
const promises_1 = require("fs/promises");
const util_1 = require("util");
const http_1 = require("http");
exports.isPromise = util_1.types.isPromise;
const isFile = async (absolutePath) => {
    const stats = await (0, promises_1.stat)(absolutePath);
    const isFile = stats.isFile();
    return isFile;
};
exports.isFile = isFile;
exports.fontFamily = "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif";
// https://github.com/nginx/nginx/blob/master/conf/mime.types
const mime = (fileName) => {
    switch ((0, path_1.extname)(fileName)) {
        case '.txt':
            return 'text/plain';
        case '.css':
            return 'text/css';
        case '.js':
            return 'application/javascript';
        case '.html':
            return 'text/html';
        case '.json':
            return 'application/json';
        case '.jpg':
        case '.jpeg':
            return 'image/jpeg';
        case '.png':
            return 'image/png';
        case '.svg':
        case '.svgz':
            return 'image/svg+xml';
        default:
            return 'text/plain';
    }
};
exports.mime = mime;
const escapeHtml = (unsafe) => {
    if (unsafe && typeof unsafe === 'string')
        return unsafe
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&apos;');
    return unsafe;
};
exports.escapeHtml = escapeHtml;
const statusCode = (code) => {
    const status = http_1.STATUS_CODES[code.toString()];
    if (status && status.length > 0)
        return status;
    else if (code === 444)
        return 'No Response';
    else
        return code.toString();
};
exports.statusCode = statusCode;
const makeHtml = (body, more = {}) => {
    const { head = [] } = more;
    return `<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    ${head.join('\n')}
  </head>
  <body>
    ${body}
  </body>
</html>`;
};
exports.makeHtml = makeHtml;
//# sourceMappingURL=helpers.js.map