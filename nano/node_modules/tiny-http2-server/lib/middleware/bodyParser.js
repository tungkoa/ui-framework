"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bodyParser = void 0;
/** Parses body and adds content to req.body */
const parse = async (req) => new Promise((resolve, reject) => {
    let buffers = [];
    let string = '';
    // check if is http2 stream
    const _req = req.stream ? req.stream : req;
    _req
        .on('data', chunk => {
        if (Buffer.isBuffer(chunk))
            buffers.push(chunk);
        else if (typeof chunk === 'string')
            string += chunk;
    })
        .on('end', () => {
        const data = buffers.length > 0 ? Buffer.concat(buffers) : string;
        return resolve(data);
    })
        .on('error', () => {
        return reject();
    });
});
exports.bodyParser = {
    parse: parse,
    /** Parse json and text. */
    json: (text = true) => (async (req, res, next) => {
        var _a;
        // is json or text
        const isJSON = req.headers['content-type'] === 'application/json';
        const isText = text && ((_a = req.headers['content-type']) === null || _a === void 0 ? void 0 : _a.startsWith('text/'));
        if (!isJSON && !isText)
            return next();
        // parse
        const body = await parse(req);
        // replace body with json
        try {
            // to string
            const string = body.toString();
            req.body = string;
            // to json
            if (isJSON) {
                const json = JSON.parse(string);
                req.body = json;
            }
        }
        catch (error) { }
        return next();
    })
};
//# sourceMappingURL=bodyParser.js.map