/// <reference types="node" />
import { ServerResponse } from 'http';
import { Http2ServerResponse } from 'http2';
export declare class ResponseBase {
    statusCode: number;
    status(statusCode: number): this;
    protected __send(body: string, contentType?: string): void;
    get send(): {
        html: (html: string, addDoctype?: boolean) => void;
        text: (text: string) => void;
        json: (json: object) => void;
        status: (status: number) => void;
        /**
         * Send a file.
         * Pass a relativePath (without leading slash) or an absolute path
         * Important: Returns a promise; Use "return res.send.file()";
         *
         * @example
         * // absolute path
         * return res.send.file(join(resolve(), 'assets/styles.css')))
         * // relative path
         * return res.send.file('assets/styles.css')
         */
        file: (filePath: string) => Promise<any>;
    };
}
declare class Response extends ServerResponse implements ResponseBase {
}
interface Response extends ResponseBase {
}
export { Response };
declare class ResponseHttp2 extends Http2ServerResponse implements ResponseBase {
}
interface ResponseHttp2 extends ResponseBase {
}
export { ResponseHttp2 };
//# sourceMappingURL=response.d.ts.map