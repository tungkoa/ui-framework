/// <reference types="node" />
import { ServerHttp2Stream } from 'http2';
import { ResponseBase } from './response';
/** Makes http2 stream compatible with http/https response. */
export declare class Stream extends ResponseBase {
    stream: ServerHttp2Stream;
    finished: boolean;
    statusCode: number;
    private _headers;
    /** Backwards compatibility with http v1 */
    get headersSent(): boolean;
    constructor(stream: ServerHttp2Stream);
    /**
     *
     * @example
     * response.setHeader('Content-Type', 'text/html; charset=utf-8');
     *
     * response.setHeader('Set-Cookie', ['type=ninja', 'language=javascript']);
     */
    setHeader(header: string, ...value: string[]): void;
    status(statusCode: number): this;
    protected __send(body: string, contentType?: string): void;
    /**
     * Send a file.
     * Pass a relativePath (without leading slash) or an absolute path
     *
     * @example
     * // absolute path
     * res.send.file(join(resolve(), 'assets/styles.css')))
     * // relative path
     * res.send.file('assets/styles.css')
     */
    private _sendFile;
}
//# sourceMappingURL=stream.d.ts.map