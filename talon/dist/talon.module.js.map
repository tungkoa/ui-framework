{"version":3,"file":"talon.module.js","sources":["../src/constants.js","../src/util.js","../src/options.js","../src/diff/catch-error.js","../src/create-element.js","../src/component.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/render.js","../src/clone-element.js","../src/create-context.js"],"sourcesContent":["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {preact.ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {VNode} [oldVNode]\n * @param {ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {Component} */\n\tlet component,\n\t\t/** @type {ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor == undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {Component} a\n * @param {Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR, INSERT_VNODE, MATCHED } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\tnewParentVNode._nextDom = oldDom;\n\tconstructNewChildrenArray(newParentVNode, renderResult, oldChildren);\n\toldDom = newParentVNode._nextDom;\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null && newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\tif (\n\t\t\t\toldDom &&\n\t\t\t\ttypeof childVNode.type == 'string' &&\n\t\t\t\t// @ts-expect-error olDom should be present on a DOM node\n\t\t\t\t!parentDom.contains(oldDom)\n\t\t\t) {\n\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t}\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (\n\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\tchildVNode._nextDom !== undefined\n\t\t) {\n\t\t\t// Since Fragments or components that return Fragment like VNodes can\n\t\t\t// contain multiple DOM nodes as the same level, continue the diff from\n\t\t\t// the sibling of last DOM child of this child VNode\n\t\t\toldDom = childVNode._nextDom;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because it\n\t\t// is only used by `diffChildren` to determine where to resume the diff\n\t\t// after diffing Components and Fragments. Once we store it the nextDOM\n\t\t// local var, we can clean up the property. Also prevents us hanging on to\n\t\t// DOM nodes that may have been unmounted.\n\t\tchildVNode._nextDom = undefined;\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\t// TODO: With new child diffing algo, consider alt ways to diff Fragments.\n\t// Such as dropping oldDom and moving fragments in place\n\t//\n\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t// _nextDom property to the nextSibling of its last child DOM node.\n\t//\n\t// `oldDom` contains the correct value here because if the last child\n\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t// node's nextSibling.\n\tnewParentVNode._nextDom = oldDom;\n\tnewParentVNode._dom = firstChildDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(newParentVNode, renderResult, oldChildren) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tconst newChildrenLength = renderResult.length;\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === undefined && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\n\t\t// Handle unmounting null placeholders, i.e. VNode => null in unkeyed children\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[skewedIndex];\n\t\t\tif (\n\t\t\t\toldVNode &&\n\t\t\t\toldVNode.key == null &&\n\t\t\t\toldVNode._dom &&\n\t\t\t\t(oldVNode._flags & MATCHED) === 0\n\t\t\t) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\n\t\t\t\t// Explicitly nullify this position in oldChildren instead of just\n\t\t\t\t// setting `_match=true` to prevent other routines (e.g.\n\t\t\t\t// `findMatchingIndex` or `getDomSibling`) from thinking VNodes or DOM\n\t\t\t\t// nodes in this position are still available to be used in diffing when\n\t\t\t\t// they have actually already been unmounted. For example, by only\n\t\t\t\t// setting `_match=true` here, the unmounting loop later would attempt\n\t\t\t\t// to unmount this VNode again seeing `_match==true`.  Further,\n\t\t\t\t// getDomSibling doesn't know about _match and so would incorrectly\n\t\t\t\t// assume DOM nodes in this subtree are mounted and usable.\n\t\t\t\toldChildren[skewedIndex] = null;\n\t\t\t\tremainingOldChildren--;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tchildVNode._index = matchingIndex;\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew = matchingIndex - skewedIndex;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else if (matchingIndex > skewedIndex) {\n\t\t\t\t// Our matched DOM-node is further in the list of children than\n\t\t\t\t// where it's at now.\n\n\t\t\t\t// When the remaining old children is bigger than the new-children\n\t\t\t\t// minus our skewed index we know we are dealing with a shrinking list\n\t\t\t\t// we have to increase our skew with the matchedIndex - the skewed index\n\t\t\t\tif (remainingOldChildren > newChildrenLength - skewedIndex) {\n\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\t// If we have matched all the children just decrease the skew\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex < skewedIndex) {\n\t\t\t\t// When our new position is in front of our old position than we increase the skew\n\t\t\t\tskew++;\n\t\t\t}\n\n\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t// match the new skew index (i + new skew)\n\t\t\tif (matchingIndex !== i + skew) {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null && (oldVNode._flags & MATCHED) === 0) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != null && oldDom.nodeType === 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\tlet shouldSearch =\n\t\tremainingOldChildren >\n\t\t(oldVNode != null && (oldVNode._flags & MATCHED) === 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) === 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture =\n\t\t\tname !== (name = name.replace(/(PointerCapture)$|Capture$/i, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname === 'onFocusOut' ||\n\t\t\tname === 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == 'http://www.w3.org/2000/svg') {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == null) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n","import {\n\tEMPTY_OBJ,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t: MODE_HYDRATE;\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\t// ^ could possibly be simplified to:\n\t\t\t\t// excessDomChildren.length = 0;\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null &&\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\troot._nextDom = undefined;\n\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType === 'svg') namespace = 'http://www.w3.org/2000/svg';\n\telse if (nodeType === 'math')\n\t\tnamespace = 'http://www.w3.org/1998/Math/MathML';\n\telse if (!namespace) namespace = 'http://www.w3.org/1999/xhtml';\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value === !!nodeType &&\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (i !== 'key' && !(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, null, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\ti !== 'key' &&\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType === 'foreignObject'\n\t\t\t\t\t? 'http://www.w3.org/1999/xhtml'\n\t\t\t\t\t: namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (\n\t\t\t\tinputValue !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType === 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== undefined && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any>} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._component = vnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to render into\n * @param {PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? null\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {Component[] | null} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\t\tsubs = null;\n\t\t\t\t};\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tif (subs) {\n\t\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n"],"names":["MODE_HYDRATE","MODE_SUSPENDED","INSERT_VNODE","MATCHED","RESET_MODE","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","isArray","Array","assign","obj","props","i","removeNode","node","parentNode","removeChild","slice","options","_catchError","error","vnode","oldVNode","errorInfo","component","ctor","handled","_parent","_component","_processingException","constructor","getDerivedStateFromError","setState","_dirty","componentDidCatch","_pendingError","e","vnodeId","createElement","type","children","key","ref","normalizedProps","arguments","length","call","defaultProps","undefined","createVNode","original","_children","_depth","_dom","_nextDom","_original","_index","_flags","createRef","current","Fragment","isValidElement","BaseComponent","context","this","getDomSibling","childIndex","sibling","renderComponent","_vnode","oldDom","commitQueue","refQueue","_parentDom","newVNode","diff","_globalContext","namespaceURI","commitRoot","updateParentDomPointers","base","child","prototype","update","callback","s","_nextState","state","_stateCallbacks","push","enqueueRender","forceUpdate","_force","_renderCallbacks","render","prevDebounce","rerenderQueue","defer","Promise","then","bind","resolve","setTimeout","c","process","_rerenderCount","debounceRendering","depthSort","a","b","sort","shift","renderQueueLength","diffChildren","parentDom","renderResult","newParentVNode","oldParentVNode","globalContext","namespace","excessDomChildren","isHydrating","childVNode","newDom","firstChildDom","oldChildren","newChildrenLength","oldChildrenLength","remainingOldChildren","skew","skewedIndex","String","matchingIndex","findMatchingIndex","unmount","constructNewChildrenArray","applyRef","contains","insert","nextSibling","parentVNode","insertBefore","nodeType","toChildArray","out","some","x","y","setStyle","style","value","setProperty","test","eventClock","dom","name","oldValue","useCapture","o","cssText","replace","toLowerCase","_listeners","_attached","addEventListener","eventProxyCapture","eventProxy","removeEventListener","removeAttribute","setAttribute","createEventProxy","eventHandler","_dispatched","event","tmp","newType","_diff","outer","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","isClassComponent","provider","contextType","_id","componentContext","_defaultValue","doRender","sub","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","renderHook","_render","count","getChildContext","getSnapshotBeforeUpdate","indexOf","newHtml","oldHtml","newChildren","inputValue","checked","localName","document","createTextNode","createElementNS","is","data","childNodes","attributes","__html","innerHTML","diffElementNodes","diffed","root","_commit","cb","skipRemove","r","componentWillUnmount","replaceNode","_root","firstChild","hydrate","cloneElement","createContext","defaultValue","contextId","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","_contextRef"],"mappings":"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"}